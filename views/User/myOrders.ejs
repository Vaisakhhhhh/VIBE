<div>
    <div class="z-50 fixed w-full">
        <!-- Include header partials -->
        <%- include("partials/header") %>
    </div>

    <div class="pt-28 md:pt-20">

        

        <div class="w-full px-0 sm:px-6 md:px-36">

            
            <div class="container mx-auto p-4">

                <nav class="flex ml-2 mb-2" aria-label="Breadcrumb">
                    <ol class="inline-flex items-center space-x-1 md:space-x-1 rtl:space-x-reverse">
                        <li class="inline-flex items-center">
                            <a href="/" class="inline-flex items-center text-xs font-medium text-gray-700 hover:text-blue-500 dark:text-gray-400">
                                Home
                            </a>
                        </li>
                        <li>
                            <div class="flex items-center">
                                <svg class="rtl:rotate-180 w-2 h-2 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                                </svg>
                                <a href="/user/profile" class="inline-flex items-center text-xs font-medium text-gray-700 hover:text-blue-500 dark:text-gray-400">
                                    My Account
                                </a>
                            </div>
                        </li>
                        <li aria-current="page">
                            <div class="flex items-center">
                                <svg class="rtl:rotate-180 w-2 h-2 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                                </svg>
                                <span class="ms-1 text-xs font-medium text-gray-500 md:ms-2 dark:text-gray-400">My Orders</span>
                            </div>
                        </li>
                    </ol>
                </nav>

                <% if (myOrders.length > 0) { %> 

                    <% myOrders.forEach(order => { %> 

                    
                        <div class="bg-white shadow-md rounded-lg px-4 sm:px-6 pt-6 mb-4 border hover:shadow-lg ">
                            <!-- Order Header -->
                            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 bg-gray-200 py-2 px-4 rounded space-y-4 sm:space-y-0 sm:space-x-4">
                                <!-- Left Section -->
                                <div>
                                    <h3 class="text-sm sm:text-lg font-semibold">Order ID: <%= order._id %></h3>
                                    <!-- Optional: Add formattedDate -->
                                    <!-- <p class="text-gray-600 text-xs sm:text-sm">Date: <%= order.formattedDate %></p> -->
                                    <p class="text-xs sm:text-sm mr-4">
                                        Payment Status: 
                                        <span class="ml-2 font-medium"><%= order.payment.paymentStatus %></span>
                                    </p>
                                </div>
                            
                                <!-- Right Section -->
                                <div class="flex flex-col sm:flex-row items-start sm:items-center space-y-4 sm:space-y-0 sm:space-x-4">
                                    <% if(order.payment.paymentStatus === 'Pending' && order.payment.paymentMethod === 'Razorpay') { %>
                                        <div>
                                            <button
                                                onclick="showRepayModal('<%= order._id %>')"
                                                class="text-xs sm:text-sm text-white bg-green-500 py-2 px-4 font-semibold rounded hover:bg-green-600">
                                                Repay Order
                                            </button>
                                        </div>
                                    <% } %>
                            
                                    <div class="text-left sm:text-right">
                                        <p class="text-sm sm:text-md font-semibold text-gray-700">
                                            Total: &#8377;<%= order.payment.finalAmount %>
                                        </p>
                                        <a href="/user/orders/<%= order._id %>" class="text-blue-500 text-xs sm:text-sm hover:text-blue-700">
                                            View order details
                                        </a>
                                    </div>
                                </div>
                            </div>
                            
    
                            <!-- Product List -->
                            <div>
                                <% order.items.forEach(item => { %>
                                    <div class="flex flex-col sm:flex-row items-start sm:items-center mb-4 border-b pb-4 last:border-b-0">
                                        <!-- Product Image and Details in the Same Row -->
                                        <div class="flex items-center flex-1 mb-4 sm:mb-0">
                                            <!-- Product Image -->
                                            <a href="/product/<%=item.productId._id %>" class="mr-4">
                                                <img
                                                    src="/uploads/<%= item.productId.images[0] %>"
                                                    alt="<%= item.productId.name %>"
                                                    class="w-16 h-16 sm:w-20 sm:h-20 object-contain"
                                                />
                                            </a>
                            
                                            <!-- Product Details -->
                                            <div>
                                                <h4 class="text-gray-800 text-sm sm:text-md font-semibold"><%= item.productId.name %></h4>
                                                <p class="text-gray-600 text-xs sm:text-sm">Color: <%= item.productId.color %></p>
                                                <p class="text-gray-600 text-xs sm:text-sm">Qty: <%= item.quantity %></p>
                                            </div>
                                        </div>
                            
                                        <!-- Price Section -->
                                        <div class="w-full sm:w-32 mb-4 sm:mb-0 text-left sm:text-center">
                                            <p class="text-gray-700 font-semibold text-sm sm:text-md"> <span>Subtotal :</span> &#8377;<%= item.subtotal %></p>
                                        </div>
                            
                                        <!-- Status Section -->
                                        <div class="w-full sm:w-40 mb-4 sm:mb-0 text-left sm:text-center">
                                            <% if(item.status === 'Cancelled') { %> 
                                                <p id="status-<%=item._id%>" class="text-xs sm:text-sm font-medium text-red-600">
                                                    <span class="text-gray-700 sm:hidden">Status :</span>
                                                    <%= item.status %>
                                                </p>
                                            <% } else { %> 
                                                <p id="status-<%=item._id%>" class="text-xs sm:text-sm font-medium 
                                                    <%= item.status === 'Delivered' ? 'text-green-600' : 'text-orange-400' %>">
                                                    <span class="text-gray-700 sm:hidden">Status :</span>
                                                    <%= item.status %>
                                                </p>
                                            <% } %>
                                        </div>
                            
                                        <!-- Cancel Button -->
                                        <div class="w-full sm:w-32 text-left sm:text-right">
                                            <% if(item.status === 'Delivered') { %> 
                                                <button 
                                                    id="returnBtn-<%=item._id%>"
                                                    class="bg-red-500 text-white px-3 py-2 rounded text-sm hover:bg-red-600 return-button" 
                                                    data-item-id="<%= item._id %>">
                                                    Request Return
                                                </button>
                                                <p id="statusUpdatedAt-<%=item._id%>" class="text-gray-600 text-xs sm:text-sm mt-2"></p>
                                            <% } else if(['Pending',  'Confirmed', 'Processing', 'Shipped','Out for Delivery'].includes(item.status)) { %>
                                                <button 
                                                    id="cancelBtn-<%=item._id%>"
                                                    onclick="showCancelModal('<%= item._id %>')" 
                                                    class="border border-gray-800 px-3 py-1 rounded-md bg-gray-800 hover:bg-gray-900 text-white text-sm">
                                                    Cancel
                                                </button>
                                                <p id="statusUpdatedAt-<%=item._id%>" class="text-gray-600 text-xs sm:text-sm mt-2"></p>
                                            <% } else { %> 
                                                <p id="statusUpdatedAt-<%=item._id%>" class="text-gray-600 text-xs sm:text-sm">
                                                    <%= item.statusDateUpdate %>
                                                </p>
                                            <% } %>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                            
                            
    
                        </div>
                    
                <% }) %>
                    
                <% } else { %>

                    <div class="w-full">
                        <div class="w-full h-[580px] bg-white border rounded-md shadow-md pt-48">
                            <h1 class="font-bold text-2xl text-center">You haven't placed any orders yet!</h1>
                            <p class="text-center mt-4">Explore our wide selection and find something you like</p>
                            <div class="flex justify-center pt-4">
                                <a href="/all/products">
                                    <button class="bg-gray-900 text-white px-4 py-2 rounded font-semibold hover:bg-gray-700">Explore our Products</button>
                                </a>
                            </div>
                        </div>
                    </div>
                    
                <% } %>

               
            </div>
        </div>
    </div>

    <!-- Include footer partial -->
    <%- include("partials/footer") %>
</div>


<div id="cancelModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden px-4 sm:px-0">
    <div class="bg-white rounded-lg shadow-lg p-6 w-96">
        <h2 class="text-lg font-bold mb-4">Confirm Cancellation</h2>
        <p class="text-gray-700 mb-6">Are you sure you want to cancel this product?</p>
        <div class="flex justify-end space-x-4">
            <button 
                id="cancelModalCancelBtn" 
                class="px-4 py-2 rounded-md bg-gray-300 hover:bg-gray-400 text-black font-semibold">
                No, Go Back
            </button>
            <button 
                id="cancelModalConfirmBtn" 
                class="px-4 py-2 rounded-md bg-black hover:bg-gray-900 font-semibold text-white">
                Yes, Cancel
            </button>
        </div>
    </div>
</div>



<div id="returnModal" class="hidden fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center px-4 sm:px-0">
    <div class="bg-white p-6 rounded-lg shadow-lg w-96">
        <h3 class="text-lg font-bold mb-4">Return Product</h3>
        <textarea id="returnReason" class="w-full border rounded p-2 mb-4" rows="4" placeholder="Explain your reason for return..."></textarea>
        <div class="flex justify-end gap-2">
            <button id="closeModal" class="bg-gray-300 text-black font-semibold px-4 py-2 rounded hover:bg-gray-400">Cancel</button>
            <button id="submitReturn" class="bg-black text-white font-semibold px-4 py-2 rounded hover:bg-gray-900">Submit</button>
        </div>
    </div>
</div>


<div id="repayModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden px-4 sm:px-0">
    <div class="bg-white rounded-lg shadow-lg p-6 w-96">
        <h2 class="text-lg font-bold mb-4 text-center">Payment Confirmation</h2>
        <p class="text-gray-700 mb-6 text-center">Are you sure you want to proceed with the repayment?</p>
        <div class="flex justify-end space-x-4">
            <button 
                id="repayModalCancelBtn" 
                class="px-4 py-2 rounded-md bg-gray-300 hover:bg-gray-400 text-black font-semibold">
                No, Go Back
            </button>
            <button 
                id="repayConfirmBtn" 
                class="px-4 py-2 rounded-md bg-green-600 hover:bg-green-700 font-semibold text-white">
                Yes, Pay now
            </button>
        </div>
    </div>
</div>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>

// ----------------------- Cancel Order -------------------------


    let cancelItemId; 
    
    function showCancelModal(itemId) {
        cancelItemId = itemId; // Store the product ID for confirmation
        document.getElementById('cancelModal').classList.remove('hidden'); // Show the modal
    }

    document.getElementById('cancelModalCancelBtn').addEventListener('click', () => {
        document.getElementById('cancelModal').classList.add('hidden'); // Hide the modal on cancel
    });

    document.getElementById('cancelModalConfirmBtn').addEventListener('click', async () => {
        document.getElementById('cancelModal').classList.add('hidden'); // Hide the modal

        try {
            // Make an AJAX POST request to cancel the product
            const response = await fetch('/user/cancel-product', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ itemId: cancelItemId })
            });

            const result = await response.json();

            if (response.ok) {
                document.getElementById(`cancelBtn-${cancelItemId}`).classList.add('hidden');
                document.getElementById(`statusUpdatedAt-${cancelItemId}`).innerText = result.cancelledDate;
                const status = document.getElementById(`status-${cancelItemId}`);

                status.innerText = 'Cancelled';
                status.classList.add('text-red-500');

                Toastify({
                        text: result.message,
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #00b09b, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();

            } else {
                alert(result.message || 'Failed to cancel the product');
            }
        } catch (error) {
            console.error('Error canceling product:', error);
            alert('An error occurred while canceling the product');
        }
    });


    // --------------------- Sent Return Request -----------------------


    document.addEventListener('DOMContentLoaded', () => {
    let selectedItemId;

    // Show return modal on button click
    document.querySelectorAll('.return-button').forEach(button => {
        button.addEventListener('click', () => {
            selectedItemId = button.dataset.itemId; // Capture the item ID
            document.getElementById('returnModal').classList.remove('hidden');
        });
    });

    // Close modal
    const closeModal = () => {
        document.getElementById('returnModal').classList.add('hidden');
        document.getElementById('returnReason').value = ''; // Reset the textarea
    };

    document.getElementById('closeModal').addEventListener('click', closeModal);

    // Submit return request
    document.getElementById('submitReturn').addEventListener('click', async () => {
        const returnReason = document.getElementById('returnReason').value.trim();

        if (!returnReason) {
            
            Toastify({
                    text: 'Please provide a reason for return.',
                    duration: 5000,
                    gravity: "bottom",
                    position: "center",
                    style: { background: "linear-gradient(to right, #ff4e50, #f44336)" }
                }).showToast();
            return;
        }

        try {
            const response = await fetch('/user/request-return', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ itemId: selectedItemId, reason: returnReason })
            });

            const result = await response.json();
            if (result.success) {
                closeModal();
                document.getElementById(`returnBtn-${selectedItemId}`).classList.add('hidden');
                document.getElementById(`statusUpdatedAt-${selectedItemId}`).innerText = result.returnRequestedDate;
                const status = document.getElementById(`status-${selectedItemId}`);

                status.innerText = 'Return Request Pending';
                status.classList.add('text-orange-400');

                Toastify({
                        text: result.message,
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #00b09b, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();

            } else {
                 
            Toastify({
                    text: result.message,
                    duration: 5000,
                    gravity: "bottom",
                    position: "center",
                    style: { background: "linear-gradient(to right, #ff4e50, #f44336)" }
                }).showToast();
            }
        } catch (error) {
            console.error('Error submitting return request:', error);
        }
    });
});



// ----------------- Repayment -------------------

const repaymodal = document.getElementById('repayModal');

function showRepayModal(orderId) {

    repaymodal.classList.remove('hidden');

    document.getElementById('repayModalCancelBtn').addEventListener('click', () => {
        repaymodal.classList.add('hidden');
    });

    document.getElementById('repayConfirmBtn').addEventListener('click', async () => {

        repaymodal.classList.add('hidden');
        
        try {
            const response = await fetch(`/repayment/${orderId}`);
            const result = await response.json();

            if(response.ok) {
                initiateRazorpayPayment(result.orderId, result.razorpayOrderId, result.amount, result.keyId);
            } else {
                Swal.fire({
                    icon: 'warning',
                    text: result.message,
                    confirmButtonColor: '#151D20'
                });
            }
        } catch (error) {
            console.log(error);
            Swal.fire({
            icon: 'error',
            title: 'Oops!',
            text: 'Something went wrong. Please try again later!',
            confirmButtonColor: '#f44336'
        });
        }
       
    });
}




function initiateRazorpayPayment(orderId, razorpayOrderId, amount, keyId) {
    const options = {
        key: keyId,
        amount: amount,
        currency: 'INR',
        name: "VIBE",
        description: "Order Payment",
        order_id: razorpayOrderId,
        handler: async function (response) {
            try {
                const verifyResponse = await fetch('/user/verify-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        orderId,
                        razorpayPaymentId: response.razorpay_payment_id,
                        razorpayOrderId: response.razorpay_order_id,
                        razorpaySignature: response.razorpay_signature,
                    })
                });

                const verifyResult = await verifyResponse.json();

                if (verifyResponse.ok) {
                    
                    window.location.href = `/order-confirmation/${verifyResult.orderId}`;
                } else {
                    alert(verifyResult.message || "Payment verification failed.");
                }
            } catch (error) {
                console.error("Payment verification error:", error);
                alert("Payment verification failed. Please try again.");
            }
        },
        modal: {
            ondismiss: async function () {
            try {
                const response = await fetch('/payment-failure', {
                    method: 'POST',
                    headers: { 'Content-Type' : 'application/json'},
                    body: JSON.stringify({ orderId })
                });

                const result = await response.json();

                if (response.ok) {
                    // window.location.href = `/order-confirmation/${result.orderId}`;
                    Swal.fire({
                        icon: 'error', 
                        title: '<strong style="color: #f44336;">Payment Failed</strong>', 
                        html: `
                            <p style="color: #333; font-size: 16px; font-weight: 400;">
                                We were unable to process your payment. Please try again or 
                                <a href="#" style="color: #007bff; text-decoration: underline;">contact support</a> for assistance.
                            </p>
                        `,
                        confirmButtonText: 'Close',
                        confirmButtonColor: '#151D20', 
                        background: '#f9f9f9', 
                        footer: '<a href="#" style="color: #007bff;">Need help? Visit our Help Center</a>', 
                        customClass: {
                            popup: 'swal-custom-popup',
                            confirmButton: 'swal-custom-confirm-button'
                        }
                    });


                }
            } catch (error) {
                console.log(error);
                alert("An error occurred. Please contact support.");
            }
          }
        },
        theme: {
            color: "#3399cc"
        }
    };

    const rzp = new Razorpay(options);
    rzp.open();
}

</script>


<style>
    .swal-custom-popup {
    border: 1px solid #ddd;
    border-radius: 8px;
}
.swal-custom-confirm-button {
    font-weight: bold;
    padding: 10px 20px;
    border-radius: 5px;
}

</style>
