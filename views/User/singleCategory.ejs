<div>

    <div class="w-full z-50 fixed">
        <!-- Include the header partial  -->
         <%- include("partials/header") %>
    </div>

    
    <div class="pt-32 sm:pt-24">


        <nav class="flex ml-2" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-1 rtl:space-x-reverse">
            <li class="inline-flex items-center">
                <a href="<%= user ? '/home' : '/' %>" class="inline-flex items-center text-xs font-medium text-gray-700 hover:text-blue-500 dark:text-gray-400 ">
                
                Home
                </a>
            </li>
            <li>
                <div class="flex items-center">
                <svg class="rtl:rotate-180 w-2 h-2 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                </svg>

                <a href="<%= user ? '/user/all/products' : '/all/products' %>" class="inline-flex items-center text-xs font-medium text-gray-700 hover:text-blue-500 dark:text-gray-400 ">
                
                    All Products
                    </a>
                
                </div>
            </li>
            <li aria-current="page">
                <div class="flex items-center">
                <svg class="rtl:rotate-180 w-2 h-2 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                </svg>
                <span class="ms-1 text-xs font-medium text-gray-500 md:ms-2 dark:text-gray-400"><%= category.name %></span>
                </div>
            </li>
            </ol>
        </nav>


         <!-- Category Title and Description -->
         <div class="text-center mb-6">
            <h2 class="text-2xl font-bold"><%= category.name %></h2>
            <p class="text-gray-700 mt-2 max-w-6xl mx-auto"><%= category.description %></p>
        </div>


        <div class=" flex mb-8">
            <div class=" m-2 max-lg:hidden">
    
                <div class="w-64 p-4 bg-white border rounded shadow-md">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-lg font-semibold">Filters</h2>
                        <button id="clearAllFilters" class="text-blue-600 text-sm font-semibold hidden" onclick="clearAllFilters()">CLEAR ALL</button>
                    </div>
    
    
                    <!-- Price -->
                    <div class="mb-4 border-t pt-4">
                        <div class="flex justify-between items-center">
                            <h3 class="text-sm font-semibold text-gray-700">PRICE</h3>
                            <button id="clearPriceFilter" class="text-blue-600 text-sm font-semibold hidden" onclick="clearPriceFilter()">CLEAR</button>
                        </div>
                        <div class="mt-2 space-y-2">
                            <label class="block text-gray-600">
                                <input type="radio" name="price" class="mr-2 filter-option price-filter" value="below_1000">
                                Below ₹1000
                            </label>
                            <label class="block text-gray-600">
                                <input type="radio" name="price" class="mr-2 filter-option price-filter" value="1000_5000">
                                ₹1000 - ₹5000
                            </label>
                            <label class="block text-gray-600">
                                <input type="radio" name="price" class="mr-2 filter-option price-filter" value="5000_10000">
                                ₹5000 - ₹10000
                            </label>
                            <label class="block text-gray-600">
                                <input type="radio" name="price" class="mr-2 filter-option price-filter"
                                    value="above_10000"> Above ₹10000
                            </label>
                        </div>
                    </div>
    
                    <!-- Brand Dropdown -->
                    <div class="mb-4 border-t pt-4">
                        <h3 class="text-sm font-semibold text-gray-700 cursor-pointer"
                            onclick="toggleDropdown('brandDropdown')">
                            BRAND
                            <span class="float-right">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" class="ml-1 inline-block"
                                    viewBox="0 0 24 24">
                                    <path
                                        d="M12 16a1 1 0 0 1-.71-.29l-6-6a1 1 0 0 1 1.42-1.42l5.29 5.3 5.29-5.29a1 1 0 0 1 1.41 1.41l-6 6a1 1 0 0 1-.7.29z"
                                        data-name="16" data-original="#000000" />
                                </svg>
                            </span> <!-- Down Arrow Icon -->
                        </h3>
                        <div id="brandDropdown" class="mt-2 hidden">
    
                            <% brands.forEach(brand=> { %>
                                <label class="block text-gray-600">
                                    <input type="checkbox" class="mr-2 filter-option brand-filter" value="<%=brand._id%>">
                                    <%= brand.name %>
                                </label>
                                <% }) %>
    
                        </div>
                    </div>
    
                    <!-- Discount -->
                    <div class="mb-4 border-t pt-4">
                        <h3 class="text-sm font-semibold text-gray-700">DISCOUNT</h3>
                        <div class="mt-2 space-y-2">
                            <label class="block text-gray-600">
                                <input type="checkbox" name="discount" class="mr-2 filter-option discount-filter" value="10">
                                10% or more
                            </label>
                            <label class="block text-gray-600">
                                <input type="checkbox" name="discount" class="mr-2 filter-option discount-filter" value="20">
                                20% or more
                            </label>
                            <label class="block text-gray-600">
                                <input type="checkbox" name="discount" class="mr-2 filter-option discount-filter" value="30">
                                30% or more
                            </label>
                            <label class="block text-gray-600">
                                <input type="checkbox" name="discount" class="mr-2 filter-option discount-filter" value="40">
                                40% or more
                            </label>
                            <label class="block text-gray-600">
                                <input type="checkbox" name="discount" class="mr-2 filter-option discount-filter" value="50">
                                50% or more
                            </label>
                        </div>
                    </div>
                </div>
    
            </div>
    
    
    
            <div class="w-full h-full mt-2 mx-6 sm:mr-2 sm:ml-0 ">
      
                    <div class="flex items-center space-x-8 mb-2 text-sm bg-white rounded py-2 px-4 border shadow-md max-lg:hidden">
                        <span class="font-semibold">Sort By</span>
                        <a href="#" class="sort-option text-gray-600 hover:text-blue-500 py-1">Price -- Low to High</a>
                        <a href="#" class="sort-option text-gray-600 hover:text-blue-500 py-1">Price -- High to Low</a>
                        <a href="#" class="sort-option text-gray-600 hover:text-blue-500 py-1">Newest First</a>
                        <a href="#" class="sort-option text-gray-600 hover:text-blue-500 py-1">Discount</a>
                    </div>
        
            
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 max-xl:gap-4 gap-1 product-list">
    
                    <% singleCategoryProducts.forEach((product)=> { %>
    
    
                        <div
                            class="bg-white rounded-2xl sm:rounded-none p-5 cursor-pointer hover:-translate-y-2 transition-all relative">
                            <div
                                class="bg-gray-100 w-10 h-10 flex items-center justify-center rounded-full cursor-pointer absolute top-4 right-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16px" class="fill-gray-800 inline-block"
                                    viewBox="0 0 64 64">
                                    <path
                                        d="M45.5 4A18.53 18.53 0 0 0 32 9.86 18.5 18.5 0 0 0 0 22.5C0 40.92 29.71 59 31 59.71a2 2 0 0 0 2.06 0C34.29 59 64 40.92 64 22.5A18.52 18.52 0 0 0 45.5 4ZM32 55.64C26.83 52.34 4 36.92 4 22.5a14.5 14.5 0 0 1 26.36-8.33 2 2 0 0 0 3.27 0A14.5 14.5 0 0 1 60 22.5c0 14.41-22.83 29.83-28 33.14Z"
                                        data-original="#000000"></path>
                                </svg>
                            </div>
    
                            <div class="w-5/6 h-[210px] overflow-hidden mx-auto aspect-w-16 aspect-h-8 md:mb-2 mb-4">
                               
                                    <a  href="<%= user ? `/user/product/${product._id}` : `/product/${product._id}` %>">
                                        <img src="/uploads/<%= product.images[0] %>" alt="Product 2"
                                            class="h-full w-full object-contain" />
                                    </a>
                                    
                            </div>
    
                            <div>
                                <h3 class="text-lg font-extrabold text-gray-800">
                                    <%= product.name %>
                                </h3>
                                <p class="text-gray-600 text-sm mt-2 line-clamp-2">
                                    <%= product.description %>
                                </p>
                                <h4 class="mt-4">
                                    <span class="text-lg font-bold mr-2"> <span>&#8377;</span>
                                        <%= product.discountPrice %>
                                    </span>
                                    <span class="text-gray-500 line-through"><span>&#8377;</span>
                                        <%= product.price %>
                                    </span>
                                    <span class="text-green-600 font-semibold ml-2">
                                        <%= product.discount %>% off
                                    </span>
                                </h4>
                            </div>
                        </div>
    
    
    
                        <% }) %>
    
                </div>


                 <!-- Pagination  -->
            <div class="mt-6 flex items-center justify-center space-x-4">
                <!-- Page Numbers -->
                <div class="flex items-center space-x-2 text-sm font-semibold text-gray-600 pagination-controls">
                  
                  <!-- Previous Button (conditionally hidden) -->
                  <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" class="text-blue-500 hover:underline">Previous</a>
                  <% } %>
              
                  <!-- Page Numbers -->
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <% if (i === currentPage) { %>
                      <span class="px-3 py-1 rounded-full bg-blue-500 text-white"><%= i %></span>
                    <% } else { %>
                      <a href="?page=<%= i %>&limit=<%= limit %>" class="px-3 py-1 rounded-full hover:bg-gray-200"><%= i %></a>
                    <% } %>
                  <% } %>
              
                  <!-- Next Button (conditionally hidden) -->
                  <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" class="text-blue-500 hover:underline">Next</a>
                  <% } %>
                </div>
              </div>
    
    
            </div>
        </div>
    </div>
    
</div>

<!-- Include the footer partial  -->
<div>
    <%- include('partials/footer') %>
</div>



<script>


 // Pagination Functionality
 document.querySelectorAll('.pagination-controls a').forEach(link => {
    link.addEventListener('click', async (event) => {
        event.preventDefault();
        const url = event.target.href;

        try {
            const response = await fetch(url);
            const html = await response.text();

            // Replace the product list and pagination controls with new content
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');

            const newProductList = doc.querySelector('.product-list');
            const newPagination = doc.querySelector('.pagination-controls');

            // Update product list and pagination in the current page
            document.querySelector('.product-list').innerHTML = newProductList.innerHTML;
            document.querySelector('.pagination-controls').innerHTML = newPagination.innerHTML;

            // Re-attach the event listeners to the new pagination links
            attachPaginationEvents();
        } catch (error) {
            console.error('Error fetching new page:', error);
        }
    });
});


// Function to attach pagination event listeners
function attachPaginationEvents() {
    document.querySelectorAll('.pagination-controls a').forEach(link => {
        link.addEventListener('click', async (event) => {
            event.preventDefault();
            const url = event.target.href;

            try {
                const response = await fetch(url);
                const html = await response.text();

                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');

                const newProductList = doc.querySelector('.product-list');
                const newPagination = doc.querySelector('.pagination-controls');

                document.querySelector('.product-list').innerHTML = newProductList.innerHTML;
                document.querySelector('.pagination-controls').innerHTML = newPagination.innerHTML;

                // Reattach pagination events for newly fetched content
                attachPaginationEvents();
            } catch (error) {
                console.error('Error fetching new page:', error);
            }
        });
    });
}

// Initial event attachment
attachPaginationEvents();



    const user = <%- JSON.stringify(user) %>
    const categoryId = <%- JSON.stringify(category._id) %>

        // Function for toggling dropdowns 
        function toggleDropdown(id) {
            const element = document.getElementById(id);
            if (element.classList.contains('hidden')) {
                element.classList.remove('hidden');
            } else {
                element.classList.add('hidden');
            }
        }
    
    
    
    
    
       document.addEventListener('DOMContentLoaded', () => {
        const filters = document.querySelectorAll('.filter-option');
        filters.forEach(filter => filter.addEventListener('change', applyFilters));
    });
    
    
    const sortOptions = document.querySelectorAll('.sort-option');
    
    sortOptions.forEach(option => {
        option.addEventListener('click', (event) => {
            event.preventDefault();
    
            // Remove active classes from all options
            sortOptions.forEach(opt => opt.classList.remove('text-blue-500','border-b-2', 'border-blue-500'));
    
            // Add active classes to the selected option
            option.classList.add('text-blue-500', 'border-b-2', 'border-blue-500');
    
           const selectedSort = option.innerHTML.toLowerCase().replace(/\s+/g, '_');
            
            applyFilters(selectedSort);
        })
    })
    
    
    async function applyFilters(sortOption) {
        // Collect selected filters
        const selectedBrands = Array.from(document.querySelectorAll('.brand-filter:checked')).map(el => el.value);
        const selectedPrice = document.querySelector('.price-filter:checked')?.value || '';
        const selectedDiscount = document.querySelector('.discount-filter:checked')?.value || '';
    
        // Show or hide the "Clear" button for price filter based on price selection
        const clearPriceButton = document.getElementById('clearPriceFilter');
        if (selectedPrice) {
            clearPriceButton.classList.remove('hidden');
        } else {
            clearPriceButton.classList.add('hidden');
        }
    
        // Show or hide the "Clear All" button based on any filter selection
        const clearAllButton = document.getElementById('clearAllFilters');
        if (selectedBrands.length || selectedPrice || selectedDiscount) {
            clearAllButton.classList.remove('hidden');
        } else {
            clearAllButton.classList.add('hidden');
        }
    
        // Build query parameters for the filters
        const queryParams = new URLSearchParams();
        if (selectedBrands.length) queryParams.append('brands', selectedBrands.join(','));
        if (selectedPrice) queryParams.append('priceRange', selectedPrice);
        if (selectedDiscount) queryParams.append('discount', selectedDiscount);
        if (sortOption) queryParams.append('sort', sortOption);
        if (categoryId) queryParams.append('categoryId', categoryId);
        try {
            // Fetch filtered products
            const response = await fetch(`/category/products/filter?${queryParams.toString()}`, {
                method: 'GET',
            });
            const data = await response.json();
            updateProductListing(data.products);
        } catch (error) {
            console.error('Error fetching filtered products:', error);
        }
    }
    
    // Clear only the price filter and hide the "Clear" button for price
    function clearPriceFilter() {
        const selectedPriceFilter = document.querySelector('.price-filter:checked');
        if (selectedPriceFilter) {
            selectedPriceFilter.checked = false;
        }
        
        // Hide the price clear button
        document.getElementById('clearPriceFilter').classList.add('hidden');
    
        // Reapply filters with the cleared price filter
        applyFilters();
    }
    
    // Clear all filters and hide the "Clear All" button
    function clearAllFilters() {
        
        // Deselect all brand filters
        document.querySelectorAll('.brand-filter:checked').forEach(el => el.checked = false);
        
        // Deselect the selected price filter
        const selectedPriceFilter = document.querySelector('.price-filter:checked');
        if (selectedPriceFilter) {
            selectedPriceFilter.checked = false;
        }
        
        // Deselect all discount filters
        document.querySelectorAll('.discount-filter:checked').forEach(el => el.checked = false);
        
        // Hide both the "Clear All" and "Clear Price" buttons
        document.getElementById('clearAllFilters').classList.add('hidden');
        document.getElementById('clearPriceFilter').classList.add('hidden');
    
        // Reapply filters with everything cleared
        applyFilters();
    }
    
    
    
    
    
     
    
        function updateProductListing(products) {
            const productContainer = document.querySelector('.product-list'); // Adjust to your container class
    
            // Clear existing products
            productContainer.innerHTML = '';
            console.log(products)
            // Insert new products
            products.forEach(product => {
                productContainer.innerHTML += `
                   <div class="bg-white rounded-2xl sm:rounded-none p-5 cursor-pointer hover:-translate-y-2 transition-all relative">
                    <div class="bg-gray-100 w-10 h-10 flex items-center justify-center rounded-full cursor-pointer absolute top-4 right-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16px" class="fill-gray-800 inline-block" viewBox="0 0 64 64">
                            <path d="M45.5 4A18.53 18.53 0 0 0 32 9.86 18.5 18.5 0 0 0 0 22.5C0 40.92 29.71 59 31 59.71a2 2 0 0 0 2.06 0C34.29 59 64 40.92 64 22.5A18.52 18.52 0 0 0 45.5 4ZM32 55.64C26.83 52.34 4 36.92 4 22.5a14.5 14.5 0 0 1 26.36-8.33 2 2 0 0 0 3.27 0A14.5 14.5 0 0 1 60 22.5c0 14.41-22.83 29.83-28 33.14Z"
                                  data-original="#000000"></path>
                        </svg>
                    </div>
            
                    <div class="w-5/6 h-[210px] overflow-hidden mx-auto aspect-w-16 aspect-h-8 md:mb-2 mb-4">
                        <a href="${user ? `/user/product/${product._id}` : `/product/${product._id}`}">
                            <img src="/uploads/${product.images[0]}" alt="${product.name}" class="h-full w-full object-contain" />
                        </a>
                    </div>
            
                    <div>
                        <h3 class="text-lg font-extrabold text-gray-800">${product.name}</h3>
                        <p class="text-gray-600 text-sm mt-2 line-clamp-2">${product.description}</p>
                        <h4 class="mt-4">
                            <span class="text-lg font-bold mr-2">${(product.discountPrice)}</span>
                            <span class="text-gray-500 line-through">${(product.price)}</span>
                            <span class="text-green-600 font-semibold ml-2">${product.discount}% off</span>
                        </h4>
                    </div>
                </div>
            `;
            });
        }
    
    </script>