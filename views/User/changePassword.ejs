<div>
    <!-- Include header partials  -->
    <div class="z-50 fixed w-full">
        <%- include("partials/header") %>
    </div>

    <div class="flex justify-center space-x-4 pt-24 mb-8">
        <!-- Include sidebar partials  -->
         <%- include("partials/sidebar") %>

         <div class="w-[900px] h-[607px] bg-white border shadow-md rounded">
            <div class="w-full px-10 pt-8 pb-8">
                <h2 class="font-semibold text-xl mb-4">Change Password</h2>


                <!-- Change password field   -->
               
                    <div class="w-1/2 pt-8">
                        <form id="passwordForm" onsubmit="handlePasswordChange(event)">
                       
                        
                            <div class="mb-4">
                                <label for="currentPassword" class="block font-semibold">Current Password</label>
                                <div class="relative">
                                    <input type="password" id="currentPassword" name="currentPassword" class="border p-2 rounded border-gray-400 w-full">
                                    <button type="button" class="absolute right-2 top-1/2 transform -translate-y-1/2" onclick="togglePasswordVisibility('currentPassword')">
                                        <i id="currentPasswordIcon" class="fas fa-eye-slash"></i> <!-- Eye icon -->
                                    </button>
                                </div>
                                <p class="text-center text-red-500" id="current-password-error"></p>
                            </div>
                            
                            <div class="mb-4">
                                <label for="newPassword" class="block font-semibold">New Password</label>
                                <div class="relative">
                                    <input type="password" id="newPassword" name="newPassword" class="border p-2 rounded border-gray-400 w-full">
                                    <button type="button" class="absolute right-2 top-1/2 transform -translate-y-1/2" onclick="togglePasswordVisibility('newPassword')">
                                        <i id="newPasswordIcon" class="fas fa-eye-slash"></i> <!-- Eye icon -->
                                    </button>
                                </div>
                                <p class="text-center text-red-500" id="new-password-error"></p>
                            </div>
                            
                            <div class="mb-8">
                                <label for="confirmPassword" class="block font-semibold">Confirm New Password</label>
                                <div class="relative">
                                    <input type="password" id="confirmPassword" name="confirmPassword" class="border p-2 rounded border-gray-400 w-full">
                                    <button type="button" class="absolute right-2 top-1/2 transform -translate-y-1/2" onclick="togglePasswordVisibility('confirmPassword')">
                                        <i id="confirmPasswordIcon" class="fas fa-eye-slash"></i> <!-- Eye icon -->
                                    </button>
                                </div>
                                <p class="text-center text-red-500" id="confirm-password-error"></p>
                            </div>

                            
                            <div class="flex justify-center">
                              
                                <button type="submit" class="bg-black text-white w-full py-2 rounded-md hover:bg-gray-900 font-semibold">Change Password</button>
                            </div>
                        </form>
                    </div>
               
                
            </div>
         </div>
    </div>

    <!-- Include footer partial  -->
     <%-include("partials/footer")%>
</div>



<script>




function togglePasswordVisibility(passwordFieldId) {
        const passwordField = document.getElementById(passwordFieldId);
        const icon = document.getElementById(passwordFieldId + 'Icon');

        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        } else {
            passwordField.type = 'password';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        }
    }




    // Handle Change Password form submission with validation
async function handlePasswordChange(event) {
    event.preventDefault(); // Prevent form from submitting the default way

    // Get input values
    const currentPassword = document.getElementById("currentPassword").value;
    const newPassword = document.getElementById("newPassword").value;
    const confirmPassword = document.getElementById("confirmPassword").value;

    // Get error message elements
    const currentPasswordError = document.getElementById("current-password-error");
    const newPasswordError = document.getElementById("new-password-error");
    const confirmPasswordError = document.getElementById("confirm-password-error");

    // Clear any existing error messages
    currentPasswordError.textContent = "";
    newPasswordError.textContent = "";
    confirmPasswordError.textContent = "";

    let isValid = true; // Validation flag

    // Current password validation
    if (!currentPassword) {
        currentPasswordError.textContent = "Please enter your current password.";
        isValid = false;
    }

    // New password validation rules
    const minLength = 8;
    const hasUppercase = /[A-Z]/.test(newPassword);
    const hasLowercase = /[a-z]/.test(newPassword);
    const hasNumber = /[0-9]/.test(newPassword);
    const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(newPassword);

    
    if(!hasUppercase || !hasLowercase || !hasNumber || !hasSpecialChar) {
        newPasswordError.textContent = "Password must include an uppercase, lowercase, number, and special character."
        isValid = false;
    }
    
     if (newPassword.length < minLength) {
         newPasswordError.textContent = "Password must be at least 8 characters";
         isValid = false;
     }
    
    if(!newPassword) {
        newPasswordError.textContent = "Please enter your new password";
        isValid = false;
    }

    // Confirm password validation
    
    if (newPassword !== confirmPassword) {
        confirmPasswordError.textContent = "Passwords do not match.";
        isValid = false;
    }

    if(!confirmPassword) {
        confirmPasswordError.textContent ="Please enter the confirm password";
        isValid = false;
    }

    // If all validations pass, send data to the backend
    if (isValid) {
        try {
            const response = await fetch('/user/change-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ currentPassword, newPassword })
            });

            const result = await response.json();

            if (response.ok) {
                Toastify({
                        text: result.message,
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #00b09b, #96c93d)",
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();

                document.getElementById("passwordForm").reset(); // Reset form after success
            } else {

                if(response.status === 400) {
                    currentPasswordError.textContent = result.message || "An error occurred. Please try again.";
                } else if (response.status === 404) {

                    Toastify({
                        text: result.message,
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #ff4e50, #f44336)",
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();

                } else {

                    Toastify({
                        text: result.message,
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #ff4e50, #f44336)",
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();

                }
                
            }
        } catch (error) {
            console.error("Error:", error);

            Toastify({
                        text: "Oops! Something went wrong. Please try again later.",
                        duration: 3000,
                        gravity: "bottom", // `top` or `bottom`
                        position: "center", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                             background: "linear-gradient(to right, #ff4e50, #f44336)"
                           
                        },
                        onClick: function(){} // Callback after click
                        }).showToast();
           
        }
    }
}

</script>




